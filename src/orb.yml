version: 2.1

description: |
    An orb to help users write macOS jobs more effectively

commands:
    ruby:
        parameters:
            version:
                description: "Ruby version required"
                type: string
        steps:
            - run:
                name: Setting Ruby version to << parameters.version >>
                command: |
                    RUBYVER="system"
                    MACOSVER=$(sw_vers -productVersion | awk -F'.' '{print $2}')

                    if [ "<< parameters.version >>" != "system" ]; then
                        RUBYVER=ruby-<< parameters.version >>
                    fi

                    if (( $MACOSVER >= 15 )); then
                        echo "chruby $RUBYVER" >> ~/.bash_profile
                    else
                        echo $RUBYVER > ~/.ruby-version
                    fi

                    echo "Ruby set to version `ruby -v`"
    brew-install:
        parameters:
            packages:
                description: "Packages to install"
                type: string
            auto-update:
                description: "Disable Homebrew auto updater"
                type: boolean
                default: true
            analytics:
                description: "Disable Homebrew analytics"
                type: boolean
                default: true
        steps:
            - unless:
                condition: << parameters.auto-update >>
                steps:
                    - run:
                        name: "Disabling Homebrew Auto Update"
                        command: HOMEBREW_NO_AUTO_UPDATE=1 >> $BASH_ENV
            - unless:
                condition: << parameters.analytics >>
                steps:
                    - run:
                        name: "Disabling Homebrew Analytics"
                        command: HOMEBREW_NO_ANALYTICS=1 >> $BASH_ENV
            - run:
                name: Installing Homebrew packages << parameters.packages >>
                command: brew install << parameters.packages >>
    brew-cask:
        parameters:
            package:
                description: "Cask to install"
                type: string
            auto-update:
                description: "Disable Homebrew auto updater"
                type: boolean
            analytics:
                description: "Disable Homebrew analytics"
                type: boolean
        steps:
            - unless:
                condition: << parameters.auto-update >>
                steps:
                    - run:
                        name: "Disabling Homebrew Auto Update"
                        command: HOMEBREW_NO_AUTO_UPDATE=1 >> $BASH_ENV
            - unless:
                condition: << parameters.analytics >>
                steps:
                    - run:
                        name: "Disabling Homebrew Analytics"
                        command: HOMEBREW_NO_ANALYTICS=1 >> $BASH_ENV
            - run:
                name: Installing Homebrew Cask << parameters.package >>
                command: brew cask install << parameters.package >>
    fastlane:
        parameters:
            lane:
                description: "Runs the specified Fastlane lane"
                type: string
            store-test-results:
                description: "Store test results automatically"
                type: boolean
                default: true
            store-output:
                description: "Upload Fastlane output directory automatically"
                type: boolean
                default: true
            store-simulator-crash-logs:
                description: "Upload simulator crash logs automatically"
                type: boolean
                default: true
        steps:
            - run:
                name: "Fastlane: Running the << parameters.lane >> lane"
                command: |
                    FL_OUTPUT_DIR="output" >> $BASH_ENV
                    bundle exec fastlane << parameters.lane >>
            - when: 
                condition: << parameters.store-output >>
                steps:
                    - store_artifacts: 
                        path: output
            - when:
                condition: << parameters.store-test-results >>
                steps:
                    - store_test_results:
                        path: output/scan
            - when:
                condition: << parameters.store-simulator-crash-logs >>
                steps:
                    - store_artifacts:
                        path: ~/Library/Logs/DiagnosticReports
    gemfile-install:
        parameters:
            cache:
                description: "Enables retrieving Gems from the cache and saving Gems to cache"
                type: boolean
                default: true
        steps:
            - when:
                condition: << parameters.cache >>
                steps:
                    - restore_cache:
                        name: "Restoring Gems from cache"
                        key: 1-gems-{{ checksum "Gemfile.lock" }}
                    - run: 
                        name: "Installing Gems"
                        command: bundle check || bundle install --path vendor/bundle
                    - save_cache:
                        name: "Saving Gems to cache"
                        key: 1-gems-{{ checksum "Gemfile.lock" }}
                        paths:
                            - vendor/bundle
            - unless:
                condition: << parameters.cache >>
                steps:
                    - run:
                        name: "Installing Gems"
                        command: bundle install --path vendor/bundle
